RebelAllianceComm

“Well, how could they be jamming us if they don't know... we're coming... Break off the attack! The 
shield is still up!" – Lando Calrissian, Star Wars Episode VI

The Rebel Alliance is testing a new communication system to avoid Imperial signal jamming devices. The 
new system broadcasts messages on rotating frequencies: if Ai is the current broadcast frequency, 
then next frequency of the broadcast is given by the formula Ai+1 = (Ai * k) % m, where k and m are 
integers less than 1 million, and % is the modulus operator. As an experienced Jedi programmer, it is 
your job to verify that the system is secure by counting the number of different frequencies that will 
be used before the frequencies start repeating.


Example:

If the initial frequency of the broadcast A is 4, k=2 and m=6 then:
The next frequency will be (4 * 2) % 6 = 2.
The frequency after that will be (2 * 2) % 6 = 4. Since we got a repetition, the number of different 
frequencies is 2.
  
Input parameters:
  A – integer, the initial frequency of the broadcast
  k – integer, the frequency multiplier that generates the next frequency
  m – integer, the modulus that generates the next frequency.
  
Constraints:
  A will be between 0 and 100000 inclusive.
  k will be between 1 and 100000 inclusive.
  m will be between 2 and 100000 inclusive.
  A and k will be strictly less than m.
  

Return value:
  integer - The number of frequencies which will be used before the system starts repeating frequencies.
Class Name:
  RebelAllianceComm

Method signature:
  public int countFrequencies(int A, int k, int m)

Test Case 1:
  countFrequencies(4, 2, 6) = 2

Test Case 2:
  countFrequencies(10, 2, 19) = 18

Test Case 3:
  countFrequencies(7, 2, 16) = 5

Test Case 4:
  countFrequencies(0, 7, 23) = 1

Test Case 5:
  countFrequencies(5, 1, 23) = 1

Test Case 6:
  countFrequencies(1, 1, 2) = 1

Test Case 7:
  countFrequencies(534, 7435, 59832) = 276

Test Case 8:
  countFrequencies(1934, 36872, 87025) = 34220

Test Case 9:
  countFrequencies(2, 99997, 100000) = 2500

Test Case 10:
  countFrequencies(63456, 99997, 100000) = 2500